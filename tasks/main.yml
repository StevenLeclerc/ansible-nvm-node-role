---
# tasks file for nvm_node

- name: Install mandatory packages from curl
  ansible.builtin.command:
    cmd: '{{ DEFAULT_SHELL_PATH }} -c "curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash"'
  ignore_errors: false
  become_user: "{{ item }}"
  loop: "{{ USERS_NVM_NODE }}"

- name: Push NVM conf to {{ DEFAULT_SHELL_CONF_FILE }}
  ansible.builtin.lineinfile:
    dest: "{{ DEFAULT_SHELL_CONF_FILE }}"
    search_string: "{{ NVM_EXPORT }}"
    insertafter: EOF
    line: "{{ NVM_EXPORT }}"
    state: present
  become_user: "{{ item }}"
  loop: "{{ USERS_NVM_NODE }}"

- name: Install node {{ NODE_VERSION }}
  ansible.builtin.shell:
    cmd: "source {{ DEFAULT_SHELL_CONF_FILE }} && nvm install {{ NODE_VERSION }} && echo 'done'"
    executable: "{{ DEFAULT_SHELL_PATH }}"
  register: result
  changed_when: "'done' in result.stdout"
  become_user: "{{ item }}"
  loop: "{{ USERS_NVM_NODE }}"

- name: Generate linkBinaries script file from template
  ansible.builtin.template:
    src: linkBinaries.sh.j2
    dest: "{{ SCRIPT_LOCAL_PATH }}/linkBinaries.sh"
  delegate_to: localhost
  tags: nvm-node-link-binaries

- name: Link binaries to /usr/bin
  ansible.builtin.script: "linkBinaries.sh {{ item.name }} && ls -la /usr/bin/{{ item.name }}"
  loop:
    - { name: node }
    - { name: npm }
  loop_control:
    label: "{{ item.name }}"
  register: result
  changed_when: "'lrwxrwxrwx.' in result.stdout"
  become: yes
  tags: nvm-node-link-binaries
